Slip 13:
Q1. Create following Vertical Scroll View Creation in Android.

activity_main.xml

<?xml version="1.0" encoding="utf-8"?>
<ScrollView xmlns:android="http://schemas.android.com/apk/res/android"
    android:layout_width="match_parent"
    android:layout_height="match_parent">
    <LinearLayout
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:layout_marginTop="20dp"
        android:orientation="vertical"
        android:padding="30dp">
        <Button
            android:layout_width="match_parent"
            android:layout_height="wrap_content"
            android:layout_marginBottom="60dp"
            android:text="Button 1" />
        <Button
            android:layout_width="match_parent"
            android:layout_height="wrap_content"
            android:layout_marginBottom="60dp"
            android:text="Button 2" />
        <Button
            android:layout_width="match_parent"
            android:layout_height="wrap_content"
            android:layout_marginBottom="60dp"
            android:text="Button 3" />
        <Button
            android:layout_width="match_parent"
            android:layout_height="wrap_content"
            android:layout_marginBottom="60dp"
            android:text="Button 4" />
        <Button
            android:layout_width="match_parent"
            android:layout_height="wrap_content"
            android:layout_marginBottom="60dp"
            android:text="Button 5" />
        <Button
            android:layout_width="match_parent"
            android:layout_height="wrap_content"
            android:layout_marginBottom="60dp"
            android:text="Button 6" />
        <Button
            android:layout_width="match_parent"
            android:layout_height="wrap_content"
            android:layout_marginBottom="60dp"
            android:text="Button 7" />
        <Button
            android:layout_width="match_parent"
            android:layout_height="wrap_content"
            android:layout_marginBottom="60dp"
            android:text="Button 8" />
        <Button
            android:layout_width="match_parent"
            android:layout_height="wrap_content"
            android:layout_marginBottom="60dp"
            android:text="Button 9" />
        <Button
            android:layout_width="match_parent"
            android:layout_height="wrap_content"
            android:layout_marginBottom="60dp"
            android:text="Button 10" />
    </LinearLayout>
</ScrollView>

MainActivity.java

package com.example.slip13;
import android.os.Bundle;
import androidx.appcompat.app.AppCompatActivity;
public class MainActivity extends AppCompatActivity {
    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);
    }
}

Q2. Write an application to accept a teacher name from user and display the names of students along
with subjects to whom they are teaching.
Create table Student (sno , s_name,s_class,s_addr)
Teacher (tno, t_name, qualification, experience)
Student-Teacher has Many to Many relationship.

activity_main.xml

<?xml version="1.0" encoding="utf-8"?>
<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    android:orientation="vertical"
    android:gravity="center"
    android:padding="16dp">
    <EditText
        android:id="@+id/teacherNameEditText"
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:hint="Enter Teacher Name"
        android:inputType="text" />
    <Button
        android:id="@+id/showStudentsButton"
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:text="Show Students" />
    <TextView
        android:id="@+id/tvStudentDetails"
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:layout_marginTop="16dp"
        android:textSize="16sp"
        android:text="Student details will appear here..."
        android:gravity="start"/>
</LinearLayout>

MainActivity.java

package com.example.slip13q2stud;
import android.database.Cursor;
import android.database.sqlite.SQLiteDatabase;
import android.os.Bundle;
import android.view.View;
import android.widget.Button;
import android.widget.EditText;
import android.widget.TextView;
import android.widget.Toast;
import androidx.appcompat.app.AppCompatActivity;
public class MainActivity extends AppCompatActivity {
    private EditText teacherNameEditText;
    private Button showStudentsButton;
    private TextView tvStudentDetails;
    private DatabaseHelper dbHelper;
    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);
        teacherNameEditText = findViewById(R.id.teacherNameEditText);
        showStudentsButton = findViewById(R.id.showStudentsButton);
        tvStudentDetails = findViewById(R.id.tvStudentDetails);
        dbHelper = new DatabaseHelper(this);
        insertSampleData();
        showStudentsButton.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                showStudents();
            }
        });
    }
    private void insertSampleData() {
        SQLiteDatabase db = dbHelper.getReadableDatabase();
        Cursor cursor = db.rawQuery("SELECT COUNT(*) FROM Teacher", null);
        cursor.moveToFirst();
        int count = cursor.getInt(0);
        cursor.close();
        if (count > 0) {
            return;
        }
        dbHelper.insertTeacher("Mr. Sharma", "M.Sc. Mathematics", 10);
        dbHelper.insertTeacher("Ms. Verma", "M.A. English", 8);
        dbHelper.insertStudent("Rahul", "10th", "Delhi");
        dbHelper.insertStudent("Priya", "12th", "Mumbai");
        dbHelper.insertStudent("Karan", "10th", "Pune");
        dbHelper.insertStudentTeacher(1, 1, "Mathematics");
        dbHelper.insertStudentTeacher(1, 3, "Mathematics");
        dbHelper.insertStudentTeacher(2, 2, "English");
    }
    private void showStudents() {
        String teacherName = teacherNameEditText.getText().toString().trim();
        if (teacherName.isEmpty()) {
            Toast.makeText(this, "Please enter a teacher name", Toast.LENGTH_SHORT).show();
            return;
        }
        Cursor cursor = dbHelper.getStudentsByTeacherName(teacherName);
        StringBuilder studentDetails = new StringBuilder();
        if (cursor.moveToFirst()) {
            do {
                String studentName = cursor.getString(0);
                String subject = cursor.getString(1);
                studentDetails.append("Student: ").append(studentName)
                        .append(" | Subject: ").append(subject).append("\n");
            } while (cursor.moveToNext());
        } else {
            studentDetails.append("No students found for ").append(teacherName);
        }
        cursor.close();
        tvStudentDetails.setText(studentDetails.toString());
    }
    @Override
    protected void onDestroy() {
        dbHelper.close();
        super.onDestroy();
    }
}

DatabaseHelper.java

package com.example.slip13q2stud;
import android.content.ContentValues;
import android.content.Context;
import android.database.Cursor;
import android.database.sqlite.SQLiteDatabase;
import android.database.sqlite.SQLiteOpenHelper;
public class DatabaseHelper extends SQLiteOpenHelper {
    private static final String DATABASE_NAME = "SchoolDB.db";
    private static final int DATABASE_VERSION = 1;
    public static final String TABLE_STUDENT = "Student";
    public static final String COLUMN_SNO = "sno";
    public static final String COLUMN_SNAME = "s_name";
    public static final String COLUMN_SCLASS = "s_class";
    public static final String COLUMN_SADDR = "s_addr";
    public static final String TABLE_TEACHER = "Teacher";
    public static final String COLUMN_TNO = "tno";
    public static final String COLUMN_TNAME = "t_name";
    public static final String COLUMN_QUALIFICATION = "qualification";
    public static final String COLUMN_EXPERIENCE = "experience";
    public static final String TABLE_STUDENT_TEACHER = "StudentTeacher";
    public static final String COLUMN_SUBJECT = "subject";
    private static final String CREATE_STUDENT_TABLE = "CREATE TABLE " + TABLE_STUDENT + " (" +
            COLUMN_SNO + " INTEGER PRIMARY KEY AUTOINCREMENT, " +
            COLUMN_SNAME + " TEXT, " +
            COLUMN_SCLASS + " TEXT, " +
            COLUMN_SADDR + " TEXT)";
    private static final String CREATE_TEACHER_TABLE = "CREATE TABLE " + TABLE_TEACHER + " (" +
            COLUMN_TNO + " INTEGER PRIMARY KEY AUTOINCREMENT, " +
            COLUMN_TNAME + " TEXT, " +
            COLUMN_QUALIFICATION + " TEXT, " +
            COLUMN_EXPERIENCE + " INTEGER)";
    private static final String CREATE_STUDENT_TEACHER_TABLE = "CREATE TABLE " + TABLE_STUDENT_TEACHER + " (" +
            "id INTEGER PRIMARY KEY AUTOINCREMENT, " +
            COLUMN_TNO + " INTEGER, " +
            COLUMN_SNO + " INTEGER, " +
            COLUMN_SUBJECT + " TEXT, " +
            "FOREIGN KEY(" + COLUMN_TNO + ") REFERENCES " + TABLE_TEACHER + "(" + COLUMN_TNO + "), " +
            "FOREIGN KEY(" + COLUMN_SNO + ") REFERENCES " + TABLE_STUDENT + "(" + COLUMN_SNO + "))";
    public DatabaseHelper(Context context) {
        super(context, DATABASE_NAME, null, DATABASE_VERSION);
    }
    public void insertTeacher(String name, String qualification, int experience) {
        SQLiteDatabase db = this.getWritableDatabase();
        ContentValues values = new ContentValues();
        values.put(COLUMN_TNAME, name);
        values.put(COLUMN_QUALIFICATION, qualification);
        values.put(COLUMN_EXPERIENCE, experience);
        db.insert(TABLE_TEACHER, null, values);
        db.close();
    }
    public void insertStudent(String name, String sClass, String address) {
        SQLiteDatabase db = this.getWritableDatabase();
        ContentValues values = new ContentValues();
        values.put(COLUMN_SNAME, name);
        values.put(COLUMN_SCLASS, sClass);
        values.put(COLUMN_SADDR, address);
        db.insert(TABLE_STUDENT, null, values);
        db.close();
    }
    public void insertStudentTeacher(int tno, int sno, String subject) {
        SQLiteDatabase db = this.getWritableDatabase();
        ContentValues values = new ContentValues();
        values.put(COLUMN_TNO, tno);
        values.put(COLUMN_SNO, sno);
        values.put(COLUMN_SUBJECT, subject);
        db.insert(TABLE_STUDENT_TEACHER, null, values);
        db.close();
    }
    @Override
    public void onCreate(SQLiteDatabase db) {
        db.execSQL(CREATE_STUDENT_TABLE);
        db.execSQL(CREATE_TEACHER_TABLE);
        db.execSQL(CREATE_STUDENT_TEACHER_TABLE);
    }
    @Override
    public void onUpgrade(SQLiteDatabase db, int oldVersion, int newVersion) {
        db.execSQL("DROP TABLE IF EXISTS " + TABLE_STUDENT_TEACHER);
        db.execSQL("DROP TABLE IF EXISTS " + TABLE_TEACHER);
        db.execSQL("DROP TABLE IF EXISTS " + TABLE_STUDENT);
        onCreate(db);
    }
    public Cursor getStudentsByTeacherName(String teacherName) {
        SQLiteDatabase db = this.getReadableDatabase();
        return db.rawQuery("SELECT S." + COLUMN_SNAME + ", ST." + COLUMN_SUBJECT +
                " FROM " + TABLE_STUDENT_TEACHER + " ST " +
                " JOIN " + TABLE_STUDENT + " S ON ST." + COLUMN_SNO + " = S." + COLUMN_SNO +
                " JOIN " + TABLE_TEACHER + " T ON ST." + COLUMN_TNO + " = T." + COLUMN_TNO +
                " WHERE T." + COLUMN_TNAME + " = ?", new String[]{teacherName});
    }
}
